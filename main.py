#!/usr/bin/env python3
import discord
import asyncio
import random
from dialog_manager import send_abilities, send_inventory
from config import Config
import mapparser
import command_help


config = Config("botconfig.cfg")
intents = discord.Intents.all()
client = discord.Client(intents=intents)


@client.event
async def on_ready():
    print(f'We have logged in as {client.user}')
    await client.change_presence(activity=discord.Game(name="–Ω–∞–ø–∏—à–∏ .–ø–æ–º–æ–≥–∏"))


@client.event
async def on_message(message: discord.Message):
    if message.author == client.user:
        return


    if message.content.lower().startswith(config.Bot.prefix + "–ø–æ–º–æ–≥–∏"):
        map = mapparser.Map(config.Map.path)
        player = map.get_player(message.author.display_name, message.author.id)

        splittedMessage = message.content.split()
        if len(splittedMessage) == 1:
            await message.channel.send(command_help.get_commands(player=player))
        elif len(splittedMessage) >= 2:
            if splittedMessage[1] == "–º–Ω–µ":
                await message.channel.send("–°–∞–º —Å–ø—Ä–∞–≤–∏—à—å—Å—è.")
            elif splittedMessage[1] == "–∞–¥–º–∏–Ω—É":
                if str(message.author.id) in config.Bot.admins:
                    await message.channel.send(command_help.get_admin_command())
                else:
                    await message.channel.send("–¢—ã –∫—Ç–æ –≤–æ–æ–±—â–µ —Ç–∞–∫–æ–π?")
            else:
                await message.channel.send(command_help.get_commands(" ".join(splittedMessage[1::]), player))

    elif message.content.lower().startswith((config.Bot.prefix + '–∫—Ç–æ —è', config.Bot.prefix + '—è –∫—Ç–æ')):
        map = mapparser.Map(config.Map.path)
        player = map.get_player(message.author.display_name, message.author.id)

        if player == mapparser.MapObjectError.NOT_FOUND:
            await message.channel.send("–¢—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—à—å.")
            return
        elif player == mapparser.MapObjectError.WRONG_ID:
            await message.channel.send("–¢—ã –º–µ–Ω—è –æ–±–º–∞–Ω—É—Ç—å –ø—ã—Ç–∞–µ—à—å—Å—è?")
            return

        msg = await message.channel.send(f'''```
–û–ó: {player.format_HP()}
–û–ú: {player.format_MP()}
–û–î: {player.SP}
–£–†: {player.level}
–§–†–ê: {player.frags}
–†–µ—Ä–æ–ª–ª—ã: {player.rerolls}

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å, –Ω–∞–∂–º–∏ –Ω–∞ üì¶, –∏–ª–∏ –≤–≤–µ–¥–∏ `{config.Bot.prefix}–ø–æ–∫–∞–∂–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å`
–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å –Ω–∞–≤—ã–∫–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, –Ω–∞–∂–º–∏ –Ω–∞ üî∏, –∏–ª–∏ –≤–≤–µ–¥–∏ `{config.Bot.prefix}–ø–æ–∫–∞–∂–∏ –Ω–∞–≤—ã–∫–∏`

–ü–µ—Ä—Å–æ–Ω–∞–∂ –∞–∫—Ç—É–∞–ª–µ–Ω –Ω–∞ –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏: {map.map_datetime}.
–£—á–∏—Ç—ã–≤–∞–π, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∑–∞ –≤—Ä–µ–º—è –º–æ–≥–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è.
```''')

        await msg.add_reaction("üì¶")
        await msg.add_reaction("üî∏")

        servedInv, servedAbils = False, False
        while True:
            try:
                reaction, user = await client.wait_for(
                    "reaction_add", 
                    check = lambda reaction, user: True if user == message.author and
                                                        str(reaction.emoji) in ["üì¶", "üî∏"] and
                                                        reaction.message == msg
                                                        else False, timeout = 10)
            except asyncio.TimeoutError:
                await msg.remove_reaction("üì¶", client.user)
                await msg.remove_reaction("üî∏", client.user)
                break
            else:
                if not servedInv and str(reaction.emoji) == "üì¶":
                    await send_inventory(message, player)
                    await msg.remove_reaction("üì¶", client.user)
                    servedInv = True
                elif not servedAbils and str(reaction.emoji) == "üî∏":
                    await send_abilities(message, player)
                    await msg.remove_reaction("üî∏", client.user)
                    servedAbils = True

    elif message.content.lower().startswith(config.Bot.prefix + '–ø–æ–∫–∞–∂–∏'):
        map = mapparser.Map(config.Map.path)
        player = map.get_player(message.author.display_name, message.author.id)

        if player == mapparser.MapObjectError.NOT_FOUND:
            await message.channel.send("–¢—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—à—å.")
            return
        elif player == mapparser.MapObjectError.WRONG_ID:
            await message.channel.send("–¢—ã –º–µ–Ω—è –æ–±–º–∞–Ω—É—Ç—å –ø—ã—Ç–∞–µ—à—å—Å—è?")
            return

        args = message.content.lower().split()
        if len(args) == 2:
            if args[1] in ["—Å–∫–∏–ª–ª—ã", "—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏", "–æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏", "–Ω–∞–≤—ã–∫–∏", "—Å–ø–µ–ª–ª—ã", "–∞–±–∏–ª–∫–∏"]:
                await send_abilities(message, player)
            elif args[1] in ["–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å", "—à–º–æ—Ç–∫–∏", "—Ä—é–∫–∑–∞–∫"]:
                await send_inventory(message, player)
            else:
                await message.channel.send(f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n{command_help.get_commands("–ø–æ–∫–∞–∂–∏")}')
        else:
            await message.channel.send(f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n{command_help.get_commands("–ø–æ–∫–∞–∂–∏")}')
    
    elif message.content.lower().startswith(config.Bot.prefix + '–≥–¥–µ —è'):
        map = mapparser.Map(config.Map.path)
        player = map.get_player(message.author.display_name, message.author.id)

        if player == mapparser.MapObjectError.NOT_FOUND:
            await message.channel.send("–¢—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—à—å.")
            return
        elif player == mapparser.MapObjectError.WRONG_ID:
            await message.channel.send("–¢—ã –º–µ–Ω—è –æ–±–º–∞–Ω—É—Ç—å –ø—ã—Ç–∞–µ—à—å—Å—è?")
            return

        resp = '```ansi\n'+map.construct_ascii_repr(player)+'\n```\n'+map.list_doors_string(player)
        await message.reply(resp)

    elif message.content.lower().startswith(config.Bot.prefix + "–≥—Ä—É–ø–ø–∞"):
        groupRole: discord.Role = None
        for role in message.author.roles:
            if role.name.startswith("–≥—Ä—É–ø–ø–∞"):
                groupRole = role
                break
        else:
            await message.channel.send("–¢—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –≥—Ä—É–ø–ø–µ.")
            return

        map = mapparser.Map(config.Map.path)
        groupMembers = list(groupRole.members)
        msg = "```ansi\n"
        
        for member in groupMembers:
            player = map.get_player(member.display_name, member.id)
            msg += f"{member.display_name}: <[31m{player.HP}/{player.maxHP}[0m> "
            if player.maxMP > 0:
                msg += f"<[34m{player.MP}/{player.maxMP}[0m>"
            msg += "\n"
        
        msg += "\n```"
        await message.channel.send(msg)

    elif message.content.lower().startswith(config.Bot.prefix + '–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å'):
        if str(message.author.id) not in config.Bot.admins:
            await message.channel.send("–¢—ã –∫–∞–∫ —Å—é–¥–∞ –ø–æ–ø–∞–ª, —à–∏–∑–∞–Ω—É—Ç—ã–π?")
            return

        if len(message.content.split("\n")) < 2:
            if len(message.content.split()) >= 2:
                map = mapparser.Map(config.Map.path)
                inv = map.get_objects_inventory(" ".join(message.content.split()[1::]))
                
                if inv is mapparser.MapObjectError.NOT_FOUND:
                    await message.channel.send("–û–±—ä–µ–∫—Ç–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ—Ç –Ω–∞ –∫–∞—Ä—Ç–µ.")
                    return

                await send_inventory(message, inv, format=False)
                return

            await message.channel.send("–ê –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å-—Ç–æ –≥–¥–µ?")
            return

        await send_inventory(message, message.content.split("\n")[1::])

    elif message.content.lower().startswith(config.Bot.prefix + "–≤—ã–±–µ—Ä–∏"):
        if str(message.author.id) not in config.Bot.admins:
            await message.channel.send("–¢—ã –∫–∞–∫ —Å—é–¥–∞ –ø–æ–ø–∞–ª, —à–∏–∑–∞–Ω—É—Ç—ã–π?")
            return
        
        args = message.content.split()
        if len(args) >= 2:
            map = mapparser.Map(config.Map.path)
            if args[1] == "–∏–≥—Ä–æ–∫–∞":
                await message.delete()

                candidates = []
                try:
                    levelNeeded: int = int(args[2]) if len(args) >= 3 and not args[2].startswith("<@&") else 0
                    excludeRole: discord.Role = message.role_mentions[0] if message.role_mentions else None

                    for user in message.guild.members:
                        if user.status == discord.Status.online and \
                        excludeRole not in user.roles:
                            if not isinstance(player := map.get_player(user.display_name, user.id), 
                                            mapparser.MapObjectError):
                                if (levelNeeded == 0) or (levelNeeded == player.level):
                                    candidates.append(player)
                except ValueError:
                    ...
                if candidates:
                    await message.channel.send(random.choice(candidates))
                else:
                    await message.channel.send("–ü–æ —Ç–∞–∫–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º —è –Ω–∏–∫–æ–≥–æ –Ω–µ –Ω–∞—à—ë–ª.")
            else:
                await message.channel.send("–í—ã–±—Ä–∞—Ç—å —á—Ç–æ?")
        else:
            await message.channel.send("–í—ã–±—Ä–∞—Ç—å —á—Ç–æ?")

    elif message.content.lower().startswith(config.Bot.prefix + '–∫–∞—Ä—Ç–∞'):
        map = mapparser.Map(config.Map.path)
        player = map.get_player(message.author.display_name, message.author.id)

        if player == mapparser.MapObjectError.NOT_FOUND:
            await message.channel.send("–¢—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—à—å.")
            return
        elif player == mapparser.MapObjectError.WRONG_ID:
            await message.channel.send("–¢—ã –º–µ–Ω—è –æ–±–º–∞–Ω—É—Ç—å –ø—ã—Ç–∞–µ—à—å—Å—è?")
            return
        if '–∫–∞—Ä—Ç–∞' not in command_help.list_inventory_commands(player):
            await message.channel.send("–£ —Ç–µ–±—è –Ω–µ—Ç –∫–∞—Ä—Ç—ã.")
            return

        resp = '```\n'+map.construct_ascii_map(player)+'```'
        await message.reply(resp)

if __name__ == '__main__':
    client.run(config.Bot.token)
