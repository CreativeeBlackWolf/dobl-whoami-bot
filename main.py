import configparser
import discord
import mapparser
import help
import asyncio


config = configparser.ConfigParser()
config.read('botconfig.cfg')
intents = discord.Intents.default()
intents.message_content = True


client = discord.Client(intents=intents)



async def send_inventory(message, player):
    inv = "\n".join(player.inventory)
    await message.channel.send(f'''```
–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å:
{inv}
```''')

async def send_abilities(message, player):
    active = "\n".join(player.active_abilities)
    passive = "\n".join(player.passive_abilities)
    await message.channel.send(f'''```
–ù–∞–≤—ã–∫–∏:
{active}

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
{passive})
```''')


@client.event
async def on_ready():
    print(f'We have logged in as {client.user}')

@client.event
async def on_message(message):
    if message.author == client.user:
        return

    map = mapparser.Map(config["map"]["path"])
    playername = message.author.display_name

    if message.content.lower().startswith("~–ø–æ–º–æ–≥–∏"):
        await message.channel.send(help.get_commands())

    if message.content.lower().startswith('~–∫—Ç–æ —è'):
        player = map.get_player(playername)

        if not player:
            await message.channel.send("–¢—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—à—å.")
            return

        msg = await message.channel.send(f'''```
–û–ó: {player.HP}
–û–ú: {player.MP}
–û–î: {player.SP}
–£–†: {player.level}
–§–†–ê: {player.frags}
–†–µ—Ä–æ–ª–ª—ã: {player.rerolls}

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å, –Ω–∞–∂–º–∏ –Ω–∞ üì¶, –∏–ª–∏ –≤–≤–µ–¥–∏ `~–ø–æ–∫–∞–∂–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å`
–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å –Ω–∞–≤—ã–∫–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, –Ω–∞–∂–º–∏ –Ω–∞ üî∏, –∏–ª–∏ –≤–≤–µ–¥–∏ `~–ø–æ–∫–∞–∂–∏ –Ω–∞–≤—ã–∫–∏`

–ü–µ—Ä—Å–æ–Ω–∞–∂ –∞–∫—Ç—É–∞–ª–µ–Ω –Ω–∞ –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏: {map.map_datetime}.
–£—á–∏—Ç—ã–≤–∞–π, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∑–∞ –≤—Ä–µ–º—è –º–æ–≥–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è.
```''')

        await msg.add_reaction("üì¶")
        await msg.add_reaction("üî∏")

        try:
            reaction, user = await client.wait_for("reaction_add", check = lambda reaction, user: True if user == message.author and
                                                                           str(reaction.emoji) in ["üì¶", "üî∏"]
                                                                           else False, timeout = 10)
        except asyncio.TimeoutError:
            await msg.remove_reaction("üì¶", client.user)
            await msg.add_reaction("üî∏", client.user)
        else:
            if str(reaction.emoji) == "üì¶":
                await send_inventory(message, player)
            elif str(reaction.emoji) == "üî∏":
                await send_abilities(message, player)

    if message.content.lower().startswith('~–ø–æ–∫–∞–∂–∏'):
        player = map.get_player(playername)

        if not player:
            await message.channel.send("–¢—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—à—å.")
            return

        args = message.content.lower().split()
        if len(args) == 2:
            if args[1] in ["—Å–∫–∏–ª–ª—ã", "—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏", "–æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏", "–Ω–∞–≤—ã–∫–∏", "—Å–ø–µ–ª–ª—ã"]:
                await send_abilities(message, player)
            elif args[1] in ["–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å", "—à–º–æ—Ç–∫–∏"]:
                await send_inventory(message, player)
            else:
                await message.channel.send(f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n{help.get_commands("–ø–æ–∫–∞–∂–∏")}')
        else:
            await message.channel.send(f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n{help.get_commands("–ø–æ–∫–∞–∂–∏")}')
    
    if message.content.lower().startswith('~–≥–¥–µ —è'):
        await message.channel.send('–∑–¥–µ—Å—å.')


if __name__ == '__main__':
    bot_token = config['bot']['token']
    client.run(bot_token)
